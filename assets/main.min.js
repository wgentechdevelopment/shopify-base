require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

/**
 * Finds all elements with a "data-module-init" attribute
 * and calls the corresponding script
 */
function initializeModules() {
  var modules = document.querySelectorAll( "[data-module-init]" );

  for ( var i = 0; i < modules.length; i++ ) {
    var el = modules[ i ];
    var $el = $( el );
    var name = el.getAttribute( "data-module-init" );

    // Find the module script
    try {
      var Module = require( "modules/" + name );
    } catch ( e ) {
      console.log( e.toString() );
      var Module = false;
    }

    // Initialize the module with the calling element
    if ( typeof Module === "function" && !$el.data( "module" ) ) {
      var mod = new Module( el );

      // Save module instance to jQuery data
      $( el ).data( "module", mod );
    }
  }
}

module.exports = initializeModules;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);
var initializeModules = require( "./lib/init-modules.js" );

$(function() {
	initializeModules();
	console.log('initializeModules');
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./lib/init-modules.js":1}],"modules/hero":[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

function Hero(el) {
  var $el = $(el);

  console.log($el);
}

module.exports = Hero;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],"modules/loading":[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

function Loading(el) {
  var $el = $(el);

  console.log('loading...')
  console.log($el)
}

module.exports = Loading;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvbGliL2luaXQtbW9kdWxlcy5qcyIsInNyYy9qcy9tYWluLmpzIiwibW9kdWxlcy9oZXJvL2hlcm8uanMiLCJtb2R1bGVzL2xvYWRpbmcvbG9hZGluZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUNqQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwidmFyICQgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snalF1ZXJ5J10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydqUXVlcnknXSA6IG51bGwpO1xuXG4vKipcbiAqIEZpbmRzIGFsbCBlbGVtZW50cyB3aXRoIGEgXCJkYXRhLW1vZHVsZS1pbml0XCIgYXR0cmlidXRlXG4gKiBhbmQgY2FsbHMgdGhlIGNvcnJlc3BvbmRpbmcgc2NyaXB0XG4gKi9cbmZ1bmN0aW9uIGluaXRpYWxpemVNb2R1bGVzKCkge1xuICB2YXIgbW9kdWxlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW2RhdGEtbW9kdWxlLWluaXRdXCIgKTtcblxuICBmb3IgKCB2YXIgaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrICkge1xuICAgIHZhciBlbCA9IG1vZHVsZXNbIGkgXTtcbiAgICB2YXIgJGVsID0gJCggZWwgKTtcbiAgICB2YXIgbmFtZSA9IGVsLmdldEF0dHJpYnV0ZSggXCJkYXRhLW1vZHVsZS1pbml0XCIgKTtcblxuICAgIC8vIEZpbmQgdGhlIG1vZHVsZSBzY3JpcHRcbiAgICB0cnkge1xuICAgICAgdmFyIE1vZHVsZSA9IHJlcXVpcmUoIFwibW9kdWxlcy9cIiArIG5hbWUgKTtcbiAgICB9IGNhdGNoICggZSApIHtcbiAgICAgIGNvbnNvbGUubG9nKCBlLnRvU3RyaW5nKCkgKTtcbiAgICAgIHZhciBNb2R1bGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBJbml0aWFsaXplIHRoZSBtb2R1bGUgd2l0aCB0aGUgY2FsbGluZyBlbGVtZW50XG4gICAgaWYgKCB0eXBlb2YgTW9kdWxlID09PSBcImZ1bmN0aW9uXCIgJiYgISRlbC5kYXRhKCBcIm1vZHVsZVwiICkgKSB7XG4gICAgICB2YXIgbW9kID0gbmV3IE1vZHVsZSggZWwgKTtcblxuICAgICAgLy8gU2F2ZSBtb2R1bGUgaW5zdGFuY2UgdG8galF1ZXJ5IGRhdGFcbiAgICAgICQoIGVsICkuZGF0YSggXCJtb2R1bGVcIiwgbW9kICk7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5pdGlhbGl6ZU1vZHVsZXM7XG4iLCJ2YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydqUXVlcnknXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2pRdWVyeSddIDogbnVsbCk7XG52YXIgaW5pdGlhbGl6ZU1vZHVsZXMgPSByZXF1aXJlKCBcIi4vbGliL2luaXQtbW9kdWxlcy5qc1wiICk7XG5cbiQoZnVuY3Rpb24oKSB7XG5cdGluaXRpYWxpemVNb2R1bGVzKCk7XG5cdGNvbnNvbGUubG9nKCdpbml0aWFsaXplTW9kdWxlcycpO1xufSk7XG4iLCJ2YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydqUXVlcnknXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2pRdWVyeSddIDogbnVsbCk7XG5cbmZ1bmN0aW9uIEhlcm8oZWwpIHtcbiAgdmFyICRlbCA9ICQoZWwpO1xuXG4gIGNvbnNvbGUubG9nKCRlbCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gSGVybztcbiIsInZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2pRdWVyeSddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnalF1ZXJ5J10gOiBudWxsKTtcblxuZnVuY3Rpb24gTG9hZGluZyhlbCkge1xuICB2YXIgJGVsID0gJChlbCk7XG5cbiAgY29uc29sZS5sb2coJ2xvYWRpbmcuLi4nKVxuICBjb25zb2xlLmxvZygkZWwpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gTG9hZGluZztcbiJdfQ==
